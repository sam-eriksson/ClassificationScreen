from skimage import io
imagergba = io.imread("/Users/sameriksson/temp/screensgen/1.png")
from skimage.color import rgba2rgb
image = rgba2rgb(imagergba)
from skimage import transform
img = transform.resize(image, (224,224)) #224
import matplotlib.pyplot as plt
plt.imshow(img)
plt.show()
numpy_image = img.transpose((2, 0, 1))
print(numpy_image.shape)
import torch.nn as nn
conv1 = nn.Conv2d(3,6,5)
print (conv1)
#Conv2d(3, 6, kernel_size=(16, 16), stride=(1, 1))
import torch
tensor_image = torch.from_numpy(numpy_image)
tensor_images = tensor_image.unsqueeze(0)
conv1 = conv1.double()
c=conv1(tensor_images)
print(c.shape)
import torch.nn.functional as F
b=F.relu(c)
pool = nn.MaxPool2d(2, 2)
d = pool(b)
print(d.shape)
conv2 = nn.Conv2d(6, 16, 5)
conv2 = conv2.double()
e = conv2(d)
print(e.shape)
f = F.relu(e)
g=pool(f)
print(g.shape)
#h=g.view(-1,16*5*5)
h=g.view(-1,16*53*53)
print(h.shape)
#fc1 = nn.Linear(16 * 5 * 5, 120)
fc1 = nn.Linear(16 * 53 * 53, 120)
fc2 = nn.Linear(120, 84)
fc3 = nn.Linear(84, 10)
fc1 = fc1.double()
fc2 = fc2.double()
fc3 = fc3.double()
i = fc1(h)
i = F.relu(i)
print(i.shape)
j = F.relu(fc2(i))
print(j.shape)
k = fc3(j)
print(k.shape)


#Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))
#torch.Size([1, 6, 28, 28])
#torch.Size([1, 6, 14, 14])
#torch.Size([1, 16, 10, 10])
#torch.Size([1, 16, 5, 5])
#torch.Size([1, 400])
#torch.Size([1, 120])
#torch.Size([1, 84])
#torch.Size([1, 10])
